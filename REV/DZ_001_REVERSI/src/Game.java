import java.util.ArrayList;
import java.util.Scanner;

public class Game {

    public static void PrintIntro() {
        System.out.print("""
                               
                   ‚ñë‚ñà‚ñÄ‚ñÄ‚ñà ‚ñë‚ñà‚ñÄ‚ñÄ‚ñÄ ‚ñë‚ñà‚îÄ‚îÄ‚ñë‚ñà ‚ñë‚ñà‚ñÄ‚ñÄ‚ñÄ ‚ñë‚ñà‚ñÄ‚ñÄ‚ñà ‚ñë‚ñà‚ñÄ‚ñÄ‚ñÄ‚ñà ‚ñÄ‚ñà‚ñÄ „ÄÄ ‚ñë‚ñà‚ñÄ‚ñÄ‚ñà ‚îÄ‚ñà‚ñÄ‚ñÄ‚ñà ‚ñë‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà ‚ñë‚ñà‚ñÄ‚ñÄ‚ñÄ
                   ‚ñë‚ñà‚ñÑ‚ñÑ‚ñÄ ‚ñë‚ñà‚ñÄ‚ñÄ‚ñÄ ‚îÄ‚ñë‚ñà‚ñë‚ñà‚îÄ ‚ñë‚ñà‚ñÄ‚ñÄ‚ñÄ ‚ñë‚ñà‚ñÑ‚ñÑ‚ñÄ ‚îÄ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñÑ ‚ñë‚ñà‚îÄ „ÄÄ ‚ñë‚ñà‚îÄ‚ñÑ‚ñÑ ‚ñë‚ñà‚ñÑ‚ñÑ‚ñà ‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà ‚ñë‚ñà‚ñÄ‚ñÄ‚ñÄ
                   ‚ñë‚ñà‚îÄ‚ñë‚ñà ‚ñë‚ñà‚ñÑ‚ñÑ‚ñÑ ‚îÄ‚îÄ‚ñÄ‚ñÑ‚ñÄ‚îÄ ‚ñë‚ñà‚ñÑ‚ñÑ‚ñÑ ‚ñë‚ñà‚îÄ‚ñë‚ñà ‚ñë‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñà ‚ñÑ‚ñà‚ñÑ „ÄÄ ‚ñë‚ñà‚ñÑ‚ñÑ‚ñà ‚ñë‚ñà‚îÄ‚ñë‚ñà ‚ñë‚ñà‚îÄ‚îÄ‚ñë‚ñà ‚ñë‚ñà‚ñÑ‚ñÑ‚ñÑ
                \s
                                                  Ôº≤ÔºµÔº¨Ôº•Ôº≥
                   -------------------------------------------------------------------------
                   1) –ü–µ—Ä–≤—ã–π —Ö–æ–¥ –¥–µ–ª–∞—é—Ç —á—ë—Ä–Ω—ã–µ. –î–∞–ª–µ–µ –∏–≥—Ä–æ–∫–∏ —Ö–æ–¥—è—Ç –ø–æ –æ—á–µ—Ä–µ–¥–∏.
                   
                   2) –î–µ–ª–∞—è —Ö–æ–¥, –∏–≥—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ—é —Ñ–∏—à–∫—É –Ω–∞ –æ–¥–Ω—É –∏–∑
                      –∫–ª–µ—Ç–æ–∫ –¥–æ—Å–∫–∏ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –º–µ–∂–¥—É —ç—Ç–æ–π –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ–∏—à–∫–æ–π
                      –∏ –æ–¥–Ω–æ–π –∏–∑ –∏–º–µ—é—â–∏—Ö—Å—è —É–∂–µ –Ω–∞ –¥–æ—Å–∫–µ —Ñ–∏—à–µ–∫ –µ–≥–æ —Ü–≤–µ—Ç–∞ –Ω–∞—Ö–æ–¥–∏–ª—Å—è
                      –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π —Ä—è–¥ —Ñ–∏—à–µ–∫ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞,
                      –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π, –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –∏–ª–∏ –¥–∏–∞–≥–æ–Ω–∞–ª—å–Ω—ã–π.
                      
                   2) –í—Å–µ —Ñ–∏—à–∫–∏ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞, –≤—Ö–æ–¥—è—â–∏–µ –≤ ¬´–∑–∞–∫—Ä—ã—Ç—ã–π¬ª –Ω–∞ —ç—Ç–æ–º —Ö–æ–¥—É —Ä—è–¥,
                      –º–µ–Ω—è—é—Ç —Ü–≤–µ—Ç –∏ –ø–µ—Ä–µ—Ö–æ–¥—è—Ç –∫ —Ö–æ–¥–∏–≤—à–µ–º—É –∏–≥—Ä–æ–∫—É.
                      
                   3) –ï—Å–ª–∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–¥–Ω–æ–≥–æ —Ö–æ–¥–∞ ¬´–∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è¬ª –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –±–æ–ª–µ–µ
                      —Ä—è–¥–∞ —Ñ–∏—à–µ–∫ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞, —Ç–æ –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞—é—Ç—Å—è –≤—Å–µ —Ñ–∏—à–∫–∏ –≤ —ç—Ç–∏—Ö —Ä—è–¥–∞—Ö.
                      
                   4) –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –∏–º–µ–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ö–æ–¥—ã, –æ–Ω –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ö–æ–¥–∞.
                   
                   5) –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–µ –∏–º–µ–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Ö–æ–¥–æ–≤, —Ç–æ —Ö–æ–¥ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —Å–æ–ø–µ—Ä–Ω–∏–∫—É.
                   
                   6) –ò–≥—Ä–∞ –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –Ω–∞ –¥–æ—Å–∫—É –≤—ã—Å—Ç–∞–≤–ª–µ–Ω—ã –≤—Å–µ —Ñ–∏—à–∫–∏ –∏–ª–∏
                      –∫–æ–≥–¥–∞ –Ω–∏ –æ–¥–∏–Ω –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ –Ω–µ –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Ö–æ–¥–∞.
                      
                   7) –ò–≥—Ä–æ–∫, —á—å–∏—Ö —Ñ–∏—à–µ–∫ –Ω–∞ –¥–æ—Å–∫–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–æ –±–æ–ª—å—à–µ, –æ–±—ä—è–≤–ª—è–µ—Ç—Å—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º.
                      –í —Å–ª—É—á–∞–µ —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–∏—à–µ–∫ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–∏—á—å—è.
                   -------------------------------------------------------------------------
                """);
    }

    public static void PrintMenu() {
        System.out.print("""

                -------------------------------------------------------
                                      ùô∂ùô∞ùôºùô¥ ùôºùô¥ùôΩùöÑ
                -------------------------------------------------------
                
                [1] –ò–≥—Ä–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ [easy] | ÔΩ°Ôæü( Ôæü^‚àÄ^Ôæü)ÔæüÔΩ°
                [2] –ò–≥—Ä–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ [pro]  | („Éé‡≤†Áõä‡≤†)„ÉéÂΩ°‚îª‚îÅ‚îª
                [3] –ò–≥—Ä–æ–∫ –ø—Ä–æ—Ç–∏–≤ –ò–≥—Ä–æ–∫–∞             | Ôºº(Ôºæ‚àÄÔºæ)„É°(Ôºæ‚àÄÔºæ)„Éé
                [4] C—á—ë—Ç                            | (Ôø£^Ôø£)„Çû
                [5] –í—ã–π—Ç–∏                           | (¬∞‚ñΩ¬∞)/
                
                –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:\s""");
    }

    public static void PlayAgainstAi(Player player, boolean isPro) {
        AI ai;
        if (isPro) {
            System.out.print("""

                    -----------------------------------------------
                    –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É –≤ PRO —Ä–µ–∂–∏–º–µ —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º!
                    -----------------------------------------------
                    """);
            ai = new AI("AI", true);
        } else {
            System.out.print("""

                    -----------------------------------------------
                    –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É –≤ –ª–µ–≥–∫–æ–º —Ä–µ–∂–∏–º–µ —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º!
                    ------------------------------------------------
                    """);
            ai = new AI("AI", false);
        }

        Board board = new Board(player, ai);
        int turn = 1;
        while (board.isPlayable() && (player.canPlay() || ai.canPlay())) {
            if (turn == 1) {
                turn = MakeTurnPlayer(player, board);
            } else {
                turn = MakeTurnAi(player, ai, board);
            }

        }
        System.out.println("\n-----------\n–ö–æ–Ω–µ—á–Ω–∞—è –¥–æ—Å–∫–∞:\n-----------\n");
        board.printBoard();
        board.printWinner(ai);
        if (player.getMaxScore() < board.getScoreUser()) {
            player.setMaxScore(board.getScoreUser());
        }

    }

    public static void PlayerVSPlayer(Player player) {
        Player player_2 = new Player("Player 2");
        Board board = new Board(player, player_2);
        System.out.print("""

                -----------------------------------------------
                –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É –≤ —Ä–µ–∂–∏–º–µ –ò–≥—Ä–æ–∫ –ø—Ä–æ—Ç–∏–≤ –ò–≥—Ä–æ–∫–∞!
                -----------------------------------------------
                """);
        int turn = 1;
        while (board.isPlayable() && (player.canPlay() || player_2.canPlay())) {
            if (turn == 1) {
               turn = MakeTurnPlayer(player, board);
            } else {
                turn = MakeTurnPlayer2(player_2, board);
            }
        }
        System.out.println("\n-----------\n–ö–æ–Ω–µ—á–Ω–∞—è –¥–æ—Å–∫–∞:\n-----------\n");
        board.printBoard();
        board.printWinner(player_2);
        if (player.getMaxScore() < board.getScoreUser()) {
            player.setMaxScore(board.getScoreUser());
        }
    }

    public static void Score(Player player) {
        System.out.printf("\n-------------------------\n–õ—É—á—à–∏–π —Å—á–µ—Ç –ò–≥—Ä–æ–∫–∞ 1 = %s \n-------------------------\n", player.getMaxScore());
    }

    private static int MakeTurnAi(Player player, AI ai, Board board) {
        int turn;
        System.out.println("\n------------------------------------------\n");
        System.out.println("–•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞!\n–¢–∏–ø —à–∞—à–µ–∫ [‚óè]\n-----------\n");
        Tie tie = ai.makeTurn(board, player);
        if (tie == null) {
            System.out.println("–í–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–≥—Ä—ã –Ω–µ—Ç, –ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞!");
            ai.setCanPlay(false);
        } else {
            board.setTurnWithTie(tie, ai);
            ai.setCanPlay(true);
        }
        System.out.println("\n–ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª —Ö–æ–¥!\n-----------\n");
        turn = 1;
        return turn;
    }

    private static int MakeTurnPlayer(Player player, Board board) {
        int turn;
        System.out.println("\n------------------------------------------\n");
        System.out.println("""
                –•–æ–¥ –ò–≥—Ä–æ–∫–∞ 1!
                –¢–∏–ø —à–∞—à–µ–∫ [‚óØ]
                ‚ñ° - –≤–æ–∑–º–æ–∂–Ω–æ–µ –º–µ—Å—Ç–æ

                ------------------------------------------
                """);
        ArrayList<Tie> turnT = getPossibleMovesForGame(player, board);
        if (turnT.size() == 0) {
            System.out.println("–í–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–≥—Ä—ã –Ω–µ—Ç, –ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞!");
            player.setCanPlay(false);
        } else {
            getFromUserPossibleMove(player, board, turnT);
            System.out.println("\n–ò–≥—Ä–æ–∫ 1 –∑–∞–≤–µ—Ä—à–∏–ª —Ö–æ–¥!\n-----------\n");
            player.setCanPlay(true);
        }
        turn = 2;
        return turn;
    }

    private static ArrayList<Tie> getPossibleMovesForGame(Player player, Board board) {
        board.printBoardWithPossibleTurns(player);
        int[][] tiesPlace = board.getPossiblePlaces(player);
        ArrayList<Tie> turnT = new ArrayList<>();
        for (int i = 0; i < 8; i++) {
            for (int j = 0; j < 8; j++) {
                if (tiesPlace[i][j] == 1) {
                    turnT.add(new Tie(player, i, j));
                }
            }
        }
        return turnT;
    }

    private static void getFromUserPossibleMove(Player player, Board board, ArrayList<Tie> turnT) {
        System.out.println("–í–æ–∑–º–æ–∂–Ω—ã–µ —Ö–æ–¥—ã:");
        int n = 1;
        for (Tie t: turnT) {
            System.out.printf("%s) –®–∞—à–∫–∞ ", n);
            System.out.printf("( x = %s | ", t.getY() + 1);
            System.out.printf("y = %s )\n", t.getX() + 1);
            n++;
        }
        Scanner inputTie = new Scanner(System.in);
        int in = 0;
        while (in <= 0 || in > n-1) {
            System.out.print("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ");
            try {
                in = inputTie.nextInt();
            } catch (Exception e) {
                inputTie.next();
                in = 0;
            }
        }
        Tie finalTie = turnT.get(in-1);
        System.out.println("–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∞—à–∫—É!");
        board.setTurnWithTie(finalTie, player);
    }

    private static int MakeTurnPlayer2(Player player_2, Board board) {
        int turn;
        System.out.println("\n------------------------------------------\n");
        System.out.println("""
                –•–æ–¥ –ò–≥—Ä–æ–∫–∞ 2!
                –¢–∏–ø —à–∞—à–µ–∫ [‚óè]
                ‚ñ° - –≤–æ–∑–º–æ–∂–Ω–æ–µ –º–µ—Å—Ç–æ

                ------------------------------------------
                """);
        ArrayList<Tie> turnT = getPossibleMovesForGame(player_2, board);
        if (turnT.size() == 0) {
            System.out.println("–í–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–≥—Ä—ã –Ω–µ—Ç, –ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞!");
            player_2.setCanPlay(false);
        } else {
            getFromUserPossibleMove(player_2, board, turnT);
            System.out.println("\n–ò–≥—Ä–æ–∫ 2 –∑–∞–≤–µ—Ä—à–∏–ª —Ö–æ–¥!\n-----------\n");
            player_2.setCanPlay(true);
        }
        turn = 1;
        return turn;
    }

    static void Menu(Player player) {
        Scanner in = new Scanner(System.in);
        int num = 0;
        while (num != 5) {
            PrintMenu();
            try {
                num = in.nextInt();
            } catch (Exception e) {
                in.next();
                num = 0;
            }
            player.setCanPlay(true);
            switch (num) {
                case (1) -> PlayAgainstAi(player, false);
                case (2) -> PlayAgainstAi(player, true);
                case (3) -> PlayerVSPlayer(player);
                case (4) -> Score(player);
                case (5) -> Outro();
                default -> System.out.println("–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5!\n");
            }
        }
    }

    private static void Outro() {
        System.out.println("""
                        –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É.
                        ----------------------------------------------------------------------------------------------------
                        ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ‚ñà
                        ‚ñà‚îÄ‚ñÑ‚îÄ‚ñÑ‚îÄ‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚ñÄ‚ñÑ‚îÄ‚ñà‚ñà‚ñÑ‚îÄ‚ñÄ‚ñà‚ñÑ‚îÄ‚ñÑ‚ñà‚ñÑ‚îÄ‚ñà‚îÄ‚ñÑ‚ñà‚îÄ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñÑ‚îÄ‚ñÑ‚ñÑ‚îÄ‚ñà‚îÄ‚ñÑ‚ñÑ‚îÄ‚ñà‚ñÑ‚îÄ‚ñÑ‚ñÑ‚ñÄ‚ñà‚ñà‚ñà‚ñÑ‚îÄ‚ñÑ‚ñÑ‚îÄ‚ñà‚ñÑ‚îÄ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÄ‚ñÑ‚îÄ‚ñà‚ñà‚ñÑ‚îÄ‚ñà‚îÄ‚ñÑ‚ñà‚ñÑ‚îÄ‚ñÑ‚ñà‚ñÑ‚îÄ‚ñÄ‚ñà‚ñÑ‚îÄ‚ñÑ‚ñà‚îÄ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà
                        ‚ñà‚ñà‚ñà‚îÄ‚ñà‚ñà‚ñà‚îÄ‚ñÑ‚îÄ‚ñà‚ñà‚îÄ‚ñÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚ñà‚ñÑ‚ñÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚ñÑ‚ñÄ‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚îÄ‚ñà‚ñà‚ñà‚ñà‚îÄ‚ñÑ‚ñà‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñÑ‚îÄ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚îÄ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚îÄ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚îÄ‚ñÄ‚îÄ‚ñà‚ñà‚ñà‚ñÑ‚îÄ‚ñÑ‚ñà‚ñà‚ñà‚îÄ‚ñà‚ñà‚ñà‚îÄ‚ñà‚ñÑ‚ñÄ‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚ñÑ‚îÄ‚ñà
                        ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ‚ñÑ‚ñÄ‚ñÑ‚ñÑ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚ñÄ‚ñÑ‚ñÑ‚ñÄ‚ñÑ‚ñÑ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñÑ‚ñÑ‚ñÄ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñÑ‚ñÑ‚ñÄ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÄ
                        ----------------------------------------------------------------------------------------------------
                        \s""");
    }
}
